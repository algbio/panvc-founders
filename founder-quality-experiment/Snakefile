rule all:
	input:		"hap.py/panvc-founders-cov10-samtools"


rule filter_chr21_from_truth:
	message:	"Extracting chr21 variants from NA12877.vcf.gz"
	input:		"NA12877.vcf.gz"
	output:		"NA12877.chr21.vcf"
	shell:		"gunzip -c {input} | grep -E '(^#)|(^chr21)' > {output}"


rule extract_chr21:
	message:	"Copying chr21 sequence"
	conda:		"../panvc-sample-workflow/workflow/envs/panvc.yaml"
	input:		"GRCh38_full_analysis_set_plus_decoy_hla.fa"
	output:		"chr21.fa"
	script:		"extract_chr21.py"


rule index_chr21:
	message:	"Indexing FASTA"
	conda:		"../panvc-sample-workflow/workflow/envs/panvc.yaml"
	input:		"chr21.fa"
	output:		"chr21.fa.fai"
	shell:		"samtools faidx {input}"


rule add_contig_header:
	message:	"Adding missing contig headers"
	input:		"call/founders-{cov}/ext_vc/pg_variants.{vc}.vcf"
	output:		"call/founders-{cov}/ext_vc/pg_variants.{vc}.fixed.vcf"
	run:
		assert 1 == len(input)
		assert 1 == len(output)
		with open(input[0], "r") as src, open(output[0], "w") as dst:
			for line in src:
				if line.startswith("#CHROM"):
					dst.write("##contig=<ID=chr21,length=46709983>\n")
				dst.write(line)


rule run_hap_py_baseline:
	message:		"Running hap.py with baseline variants"
	conda:			"../envs/happy.yaml"
	threads:		workflow.cores
	input:
		reference	= "chr21.fa",
		faidx		= "chr21.fa.fai",
		truth_vcf	= "NA12877.chr21.vcf",
		query_vcf	= "call/{index}-{cov}/baseline_vc/variants.{vc}.vcf"
	output:			"hap.py/baseline-{index}-cov{cov}-{vc}"
	shell:	"hap.py --verbose --threads {workflow.cores} -r {input.reference} -o hap.py/baseline-{wildcards.index}-cov{wildcards.cov}-{wildcards.vc} {input.truth_vcf} {input.query_vcf}"


rule run_hap_py_panvc:
	message:		"Running hap.py with PanVC variants"
	conda:			"../envs/happy.yaml"
	threads:		workflow.cores
	input:
		reference	= "chr21.fa",
		faidx		= "chr21.fa.fai",
		truth_vcf	= "NA12877.chr21.vcf",
		query_vcf	= "call/{index}-{cov}/ext_vc/pg_variants.{vc}.fixed.vcf"
	output:			"hap.py/panvc-{index}-cov{cov}-{vc}"
	shell:	"hap.py --verbose --threads {workflow.cores} -r {input.reference} -o hap.py/panvc-{wildcards.index}-cov{wildcards.cov}-{wildcards.vc} {input.truth_vcf} {input.query_vcf}"
